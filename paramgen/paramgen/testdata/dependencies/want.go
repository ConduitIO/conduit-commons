// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package dependencies

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	ConfigFoo                 = "foo"
	ConfigMyBool              = "myBool"
	ConfigMyByte              = "myByte"
	ConfigMyDurSlice          = "myDurSlice"
	ConfigMyDuration          = "myDuration"
	ConfigMyFloat32           = "myFloat32"
	ConfigMyFloat64           = "myFloat64"
	ConfigMyFloatSlice        = "myFloatSlice"
	ConfigMyInt               = "myInt"
	ConfigMyInt16             = "myInt16"
	ConfigMyInt32             = "myInt32"
	ConfigMyInt64             = "myInt64"
	ConfigMyInt8              = "myInt8"
	ConfigMyIntSlice          = "myIntSlice"
	ConfigMyRune              = "myRune"
	ConfigMyString            = "myString"
	ConfigMyStringMap         = "myStringMap.*"
	ConfigMyStructMapMyInt    = "myStructMap.*.myInt"
	ConfigMyStructMapMyString = "myStructMap.*.myString"
	ConfigMyUint              = "myUint"
	ConfigMyUint16            = "myUint16"
	ConfigMyUint32            = "myUint32"
	ConfigMyUint64            = "myUint64"
	ConfigMyUint8             = "myUint8"
)

func (Config) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		ConfigFoo: {
			Default:     "bar",
			Description: "MyGlobalString is a required field in the global config with the name\n\"foo\" and default value \"bar\".",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigMyBool: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		ConfigMyByte: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigMyDurSlice: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigMyDuration: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		ConfigMyFloat32: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{},
		},
		ConfigMyFloat64: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{},
		},
		ConfigMyFloatSlice: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigMyInt: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{
				config.ValidationLessThan{V: 100},
				config.ValidationGreaterThan{V: 0},
			},
		},
		ConfigMyInt16: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyInt32: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyInt64: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyInt8: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyIntSlice: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigMyRune: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyString: {
			Default:     "",
			Description: "MyString my string description",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigMyStringMap: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigMyStructMapMyInt: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyStructMapMyString: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigMyUint: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyUint16: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyUint32: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyUint64: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		ConfigMyUint8: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
	}
}
