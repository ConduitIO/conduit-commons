// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package example

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	SourceConfigFoo                 = "foo"
	SourceConfigMyBool              = "myBool"
	SourceConfigMyBoolPtr           = "myBoolPtr"
	SourceConfigMyByte              = "myByte"
	SourceConfigMyDurSlice          = "myDurSlice"
	SourceConfigMyDuration          = "myDuration"
	SourceConfigMyDurationPtr       = "myDurationPtr"
	SourceConfigMyFloat32           = "myFloat32"
	SourceConfigMyFloat64           = "myFloat64"
	SourceConfigMyFloatSlice        = "myFloatSlice"
	SourceConfigMyInt               = "myInt"
	SourceConfigMyInt16             = "myInt16"
	SourceConfigMyInt32             = "myInt32"
	SourceConfigMyInt64             = "myInt64"
	SourceConfigMyInt8              = "myInt8"
	SourceConfigMyIntSlice          = "myIntSlice"
	SourceConfigMyRune              = "myRune"
	SourceConfigMyString            = "myString"
	SourceConfigMyStringMap         = "myStringMap.*"
	SourceConfigMyStructMapMyInt    = "myStructMap.*.myInt"
	SourceConfigMyStructMapMyString = "myStructMap.*.myString"
	SourceConfigMyUint              = "myUint"
	SourceConfigMyUint16            = "myUint16"
	SourceConfigMyUint32            = "myUint32"
	SourceConfigMyUint64            = "myUint64"
	SourceConfigMyUint8             = "myUint8"
)

func (SourceConfig) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		SourceConfigFoo: {
			Default:     "bar",
			Description: "MyGlobalString is a required field in the global config with the name\n\"foo\" and default value \"bar\".",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		SourceConfigMyBool: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		SourceConfigMyBoolPtr: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		SourceConfigMyByte: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigMyDurSlice: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigMyDuration: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		SourceConfigMyDurationPtr: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeDuration,
			Validations: []config.Validation{},
		},
		SourceConfigMyFloat32: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{},
		},
		SourceConfigMyFloat64: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeFloat,
			Validations: []config.Validation{},
		},
		SourceConfigMyFloatSlice: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigMyInt: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{
				config.ValidationLessThan{V: 100},
				config.ValidationGreaterThan{V: 0},
			},
		},
		SourceConfigMyInt16: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyInt32: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyInt64: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyInt8: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyIntSlice: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigMyRune: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyString: {
			Default:     "",
			Description: "MyString my string description",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigMyStringMap: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigMyStructMapMyInt: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyStructMapMyString: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		SourceConfigMyUint: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyUint16: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyUint32: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyUint64: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
		SourceConfigMyUint8: {
			Default:     "",
			Description: "",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{},
		},
	}
}
